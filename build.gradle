plugins {
    id 'java'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    mavenCentral().content {
        excludeModule("javax.media", "jai_core")
    }
    maven { url "https://maven.geotoolkit.org" }
    maven { url "https://repo.osgeo.org/repository/release/" }
    maven { url "https://repo.osgeo.org/repository/snapshot/" }
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.22'

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.1'

    implementation 'commons-io:commons-io:2.6'
    implementation 'org.apache.logging.log4j:log4j-api:2.17.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.17.0'
    implementation 'org.apache.commons:commons-compress:1.21'

    implementation 'com.google.code.gson:gson:2.8.9'

    implementation 'org.gdal:gdal:3.3.0'

    implementation 'org.geotools:gt-shapefile:27-SNAPSHOT'
    implementation 'org.geotools:gt-geojson:27-SNAPSHOT'
    implementation 'org.geotools:gt-geojsondatastore:27-SNAPSHOT'
    implementation 'org.geotools:gt-epsg-hsql:27-SNAPSHOT'

    annotationProcessor 'info.picocli:picocli-codegen:4.6.2'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

compileJava {
    options.compilerArgs += ["-Aproject=${project.group}/${project.name}"]
}

test {
    useJUnitPlatform()
}