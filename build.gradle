buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url = "https://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
		classpath "com.github.jengelman.gradle.plugins:shadow:4.0.0"
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: 'eclipse'
apply plugin: 'java'



version = project.mod_version
group = project.mod_group
archivesBaseName = project.mod_id



sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'
compileJava.options.encoding = 'UTF-8'



tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}



minecraft {
    mappings channel: 'snapshot', version: '20171003-1.12'
	runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }

        server {
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }
    }
}



repositories {
    mavenCentral()
    jcenter()
    /* maven { // kabeja
        url = "http://logicaldoc.sourceforge.net/maven/"
    } */
    maven { // cubicchunks, cubicworldgen, terraplusplus
        name = "JitPack"
        url = "https://jitpack.io/"
    }
    maven { // leveldb
        name = "DaPorkchop_"
        url = "https://maven.daporkchop.net/"
    }
    maven { // leveldb
        name = "OpenCollab Snapshots"
        url = "https://repo.opencollab.dev/snapshot/"
    }
    maven { // jankson
        name = "elytradev"
        url = "https://repo.elytradev.com/"
    }
    maven {
        name = "Sponge"
        url = "https://repo.spongepowered.org/maven/"
    }
    maven { // worldedit
    	name = "EngineHub"
    	url = "https://maven.enginehub.org/repo/"
    }
}



configurations {
    shade
    compile.extendsFrom shade
}



dependencies {
	minecraft "net.minecraftforge:forge:${project.forge_version}"

    compile 'com.github.OpenCubicChunks.CubicChunks:cubicchunks:6e18a97abe31e1c7892ebcf8ed0f17a4ac379e10'
    compile 'com.github.OpenCubicChunks:CubicWorldGen:27de56d2f792513873584b2f8fd9f3082fb259ec'
    compile 'com.github.BuildTheEarth:terraplusplus:74449c4af349fd9b77b10e1041ed2c09f2d78518'
    
    compile ('com.sk89q.worldedit:worldedit-core:6.1.4-SNAPSHOT') { transitive = false }
    compile ('com.sk89q.worldedit:worldedit-forge-mc1.12.1:7.0.0-SNAPSHOT') { transitive = false }

    shade 'org.osgeo:proj4j:0.1.0'
	// Used to read .dxf files. It's now unused, since dxf files don't have database files, making it impossible to get building heights only with it.
    // shade 'org.kabeja:kabeja:0.4'

    runtime "org.apache.commons:commons-imaging:1.0-alpha2"
    runtime("net.daporkchop:leveldb-mcpe-jni:0.0.10-SNAPSHOT")  {
        exclude group: "io.netty"
    }
}



shadowJar {
	classifier = null
	configurations = [project.configurations.shade]

	exclude 'module-info.class'
}

build.dependsOn shadowJar



reobf {
	shadowJar {}
}



task relocateShadowJar(type: com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation) {
	target = tasks.shadowJar
	prefix = "${project.mod_group}.${project.mod_id}.dep"
}



shadowJar.dependsOn relocateShadowJar
